#!/bin/sh
# echo ".envvars START"


if [ -z $ENVVARS_LOADED ] ; then
    echo "Loading environment variables"
    export ENVVARS_LOADED=true
else
    return
fi

# echo "initial LD_LIBRARY_PATH=$LD_LIBRARY_PATH"
MY_LD_LIBRARY_PATH=$MY_LD_LIBRARY_PATH:$HOME/.local/lib
MY_LD_LIBRARY_PATH=$MY_LD_LIBRARY_PATH:$HOME/.local/gcc/lib
MY_LD_LIBRARY_PATH=$MY_LD_LIBRARY_PATH:$HOME/.local/gcc/lib/gcc
MY_LD_LIBRARY_PATH=$MY_LD_LIBRARY_PATH:$HOME/.local/gcc/lib64
MY_LD_LIBRARY_PATH=$MY_LD_LIBRARY_PATH:$HOME/.local/openblas/lib/
MY_LD_LIBRARY_PATH=$MY_LD_LIBRARY_PATH:$HOME/.local/libgit2/lib
MY_LD_LIBRARY_PATH=$MY_LD_LIBRARY_PATH:/usr/local/cuda/lib
MY_LD_LIBRARY_PATH=$MY_LD_LIBRARY_PATH:/fs/cetus3/fs3/cmd/s/afsm/pca/.local/mpfr/lib
MY_LD_LIBRARY_PATH=$MY_LD_LIBRARY_PATH:/fs/cetus3/fs3/cmd/s/afsm/pca/.local/mpc/lib
MY_LD_LIBRARY_PATH=$MY_LD_LIBRARY_PATH:/fs/cetus3/fs3/cmd/s/afsm/pca/.local/gmp/lib
export LD_LIBRARY_PATH="$MY_LD_LIBRARY_PATH:$LD_LIBRARY_PATH"

# THEANO_FLAGS=\
            # device=cpu,\
            # optimizer=fast_run,\
            # exception_verbosity=high

# echo "initial DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH"
MY_DYLD_LIBRARY_PATH=$MY_DYLD_LIBRARY_PATH:$HOME/.local/lib
# MY_DYLD_LIBRARY_PATH=$MY_DYLD_LIBRARY_PATH:$HOME/.local/openblas/lib
# MY_DYLD_LIBRARY_PATH=$MY_DYLD_LIBRARY_PATH:/Developer/NVIDIA/CUDA-8.0/lib
export DYLD_LIBRARY_PATH=$MY_DYLD_LIBRARY_PATH:$DYLD_LIBRARY_PATH


# For my own education, I will set my PATH entirely here, but this is kind of
# dumb because the initial value of PATH is different on various systems.
# However, I will have a function to toggle between
#    PATH=$PHILRC_SYSTEM_PATH,
#    PATH=$MY_PATH:$PHILRC_SYSTEM_PATH
#    PATH=$MY_PATH
PHILRC_SYSTEM_PATH=$PATH
linuxbrew_dir=$HOME/.linuxbrew/Homebrew/bin
if [ -d $linuxbrew_dir ] ; then
    PHILRC_MY_PATH=${PHILRC_MY_PATH:+${PHILRC_MY_PATH}:}$linuxbrew_dir
fi
# Note about the ${XX:+${XX}:}  this expands to nothing if XX is empty variable
# it expands to "${XX}:" if XX is not empty variable
PHILRC_MY_PATH=${PHILRC_MY_PATH:+${PHILRC_MY_PATH}:}$HOME/.local/bin               # Locally installed programs
PHILRC_MY_PATH=${PHILRC_MY_PATH:+${PHILRC_MY_PATH}:}/usr/local/bin
PHILRC_MY_PATH=${PHILRC_MY_PATH:+${PHILRC_MY_PATH}:}/usr/bin
PHILRC_MY_PATH=${PHILRC_MY_PATH:+${PHILRC_MY_PATH}:}/usr/sbin
PHILRC_MY_PATH=${PHILRC_MY_PATH:+${PHILRC_MY_PATH}:}/bin
export PHILRC_MY_PATH
export PHILRC_SYSTEM_PATH
export PATH=$PHILRC_MY_PATH

export CDPATH=".:$HOME":$HOME/Documents:$HOME/Documents/GitHub

export MANPATH="$HOME/.local/man:$MANPATH"

LESS="$LESS -FX"                                                               # For git log to display without paging if output fits on one screen
LESS="$LESS -R"                                                                # For less to have color
export LESS

export LANG=en_US.UTF-8
export TZ='America/Toronto'
export LC_COLLATE=C                                                            # Makes ls sortint case sensitive
export EDITOR=vim                                                              # Set editor as vim for most things
export FCEDIT=vim

#if in tmux, export this I forget why
! [ -z "$TMUX" ] && export TERM=xterm-256color

export PHIL_NOTES_DIR="$HOME/Dropbox/Notes/Notes_BUCKET"
export PHIL_GTD_DIR="$HOME/Dropbox/Notes/gtd"
export PHIL_CMC_SCIENCE_USER="phc001"
export PHIL_CMC_EC_USER="afsmpca"

# Added by /Applications/Python 3.7/Update ...

# Setting PATH for Python 3.7
# The original version is saved in .bash_profile.pysave
# PATH="/Library/Frameworks/Python.framework/Versions/3.7/bin:${PATH}"
# export PATH

# Setting PATH for Python 3.7
# The original version is saved in .bash_profile.pysave
# PATH="/Library/Frameworks/Python.framework/Versions/3.7/bin:${PATH}"
# export PATH

# Setting PATH for Python 3.7
# The original version is saved in .bash_profile.pysave
# PATH="/Library/Frameworks/Python.framework/Versions/3.7/bin:${PATH}"
# export PATH

export TMPDIR=/tmp/afsmpca
# echo ".envvars END"

# Suggested by homebrew after installing Ipython on my imac <2019-02-09 Sat> 
# export PATH="/usr/local/opt/sqlite/bin:$PATH"
# export LDFLAGS="-L/usr/local/opt/sqlite/lib"
# export CPPFLAGS="-I/usr/local/opt/sqlite/include"
# export PKG_CONFIG_PATH="/usr/local/opt/sqlite/lib/pkgconfig"
# Suggested by homebrew regarding libxml2 (on my imac)
# export PATH="/usr/local/opt/libxml2/bin:$PATH"
# export LDFLAGS="-L/usr/local/opt/libxml2/lib"
# export CPPFLAGS="-I/usr/local/opt/libxml2/include"
# export PKG_CONFIG_PATH="/usr/local/opt/libxml2/lib/pkgconfig"
