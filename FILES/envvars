#!/bin/sh
# echo ".envvars START" >&2


if [ -n "${PHILRC_ENVVARS_LOADED}" ] ; then
    return
    echo "DOUBLE SOURCING of .envvars" >&2
    true
fi

export GOPATH=$HOME/go

# echo "\~/.philconfig/FILES/envvars : GOPATH=$GOPATH"

# echo "initial LD_LIBRARY_PATH=$LD_LIBRARY_PATH"
MY_LD_LIBRARY_PATH=$MY_LD_LIBRARY_PATH:$HOME/.local/lib
MY_LD_LIBRARY_PATH=$MY_LD_LIBRARY_PATH:$HOME/.local/gcc/lib
MY_LD_LIBRARY_PATH=$MY_LD_LIBRARY_PATH:$HOME/.local/gcc/lib/gcc
MY_LD_LIBRARY_PATH=$MY_LD_LIBRARY_PATH:$HOME/.local/gcc/lib64
MY_LD_LIBRARY_PATH=$MY_LD_LIBRARY_PATH:$HOME/.local/openblas/lib/
MY_LD_LIBRARY_PATH=$MY_LD_LIBRARY_PATH:$HOME/.local/libgit2/lib
MY_LD_LIBRARY_PATH=$MY_LD_LIBRARY_PATH:/usr/local/cuda/lib
MY_LD_LIBRARY_PATH=$MY_LD_LIBRARY_PATH:/fs/cetus3/fs3/cmd/s/afsm/pca/.local/mpfr/lib
MY_LD_LIBRARY_PATH=$MY_LD_LIBRARY_PATH:/fs/cetus3/fs3/cmd/s/afsm/pca/.local/mpc/lib
MY_LD_LIBRARY_PATH=$MY_LD_LIBRARY_PATH:/fs/cetus3/fs3/cmd/s/afsm/pca/.local/gmp/lib
export LD_LIBRARY_PATH="$MY_LD_LIBRARY_PATH:$LD_LIBRARY_PATH"

if [[ "$(uname)" == Darwin ]] ; then
    MY_DYLD_LIBRARY_PATH=$MY_DYLD_LIBRARY_PATH:$HOME/.local/lib
    export DYLD_LIBRARY_PATH=$MY_DYLD_LIBRARY_PATH:$DYLD_LIBRARY_PATH
fi

PHILRC_SYSTEM_PATH=$PATH

linuxbrew_dir=$(cd -P $HOME/.linuxbrew/Homebrew 2>/dev/null && pwd)
if [ -e "$linuxbrew_dir" ] && [ -d "$linuxbrew_dir" ] ; then
    PHILRC_MY_PATH="\
$linuxbrew_dir/bin:\
$linuxbrew_dir/sbin"
else
    echo "LINUXBREW DIR DOES NOT EXIST"
fi

PHILRC_MY_PATH="\
/bin:\
/usr/bin:\
/usr/local/bin:\
/Users/pcarphin/Library/Python/3.8/bin:\
$HOME/.local/bin${PHILRC_MY_PATH:+:${PHILRC_MY_PATH}}"

export PHILRC_MY_PATH
export PHILRC_SYSTEM_PATH
export PATH="$PHILRC_SYSTEM_PATH:$PHILRC_MY_PATH"

export MANPATH="$HOME/.local/man:$MANPATH"

LESS="$LESS -FX"                                                               # For git log to display without paging if output fits on one screen
LESS="$LESS -R"                                                                # For less to have color
export LESS

# if [ "$(hostname)" != sequoia ]; then
#    export LANG=en_US.UTF-8
#    export LC_ALL=en_US.UTF-8
# fi

# export TZ='America/Toronto'
# Makes ls sortint case sensitive
# export LC_COLLATE=C
# Change that horrible blue color on the default ls settings for macOS's ls
if [ "$(uname)" = Darwin ] ; then
    # The string is formed by two letter pairs [fg,bg] where the order
    # determines the setting they affect [directory][symlink][socket][pipe]
    # ... and well explained in =man ls=.
    export LSCOLORS=dxfxcxdxbxegedabagacad
fi

export EDITOR=vim                                                              # Set editor as vim for most things
export FCEDIT=vim

#if in tmux, export this I forget why
if [ -n "$TMUX" ] ; then
    export TERM=xterm-256color
fi


export PHIL_NOTES_DIR="$HOME/Dropbox/Notes/Notes_BUCKET"
export PHIL_GTD_DIR="$HOME/Dropbox/Notes/gtd"
export PHIL_CMC_SCIENCE_USER="phc001"
export PHIL_CMC_EC_USER="afsmpca"

export PHILRC_ENVVARS_LOADED="true"

# Added by /Applications/Python 3.7/Update ...

# Setting PATH for Python 3.7
# The original version is saved in .bash_profile.pysave
# PATH="/Library/Frameworks/Python.framework/Versions/3.7/bin:${PATH}"
# export PATH

# Setting PATH for Python 3.7
# The original version is saved in .bash_profile.pysave
# PATH="/Library/Frameworks/Python.framework/Versions/3.7/bin:${PATH}"
# export PATH

# Setting PATH for Python 3.7
# The original version is saved in .bash_profile.pysave
# PATH="/Library/Frameworks/Python.framework/Versions/3.7/bin:${PATH}"
# export PATH
######### Output at the end of running the pyenv installer script ##############
# WARNING: seems you still have not added 'pyenv' to the load path.
#
# # Load pyenv automatically by adding
# # the following to ~/.bashrc:
#
# export PATH="/Users/pcarphin/.pyenv/bin:$PATH"
# eval "$(pyenv init -)"
# eval "$(pyenv virtualenv-init -)"
################################################################################
# echo ".envvars END"

# Suggested by homebrew after installing Ipython on my imac <2019-02-09 Sat> 
# export PATH="/usr/local/opt/sqlite/bin:$PATH"
# export LDFLAGS="-L/usr/local/opt/sqlite/lib"
# export CPPFLAGS="-I/usr/local/opt/sqlite/include"
# export PKG_CONFIG_PATH="/usr/local/opt/sqlite/lib/pkgconfig"
# Suggested by homebrew regarding libxml2 (on my imac)
# export PATH="/usr/local/opt/libxml2/bin:$PATH"
# export LDFLAGS="-L/usr/local/opt/libxml2/lib"
# export CPPFLAGS="-I/usr/local/opt/libxml2/include"
# export PKG_CONFIG_PATH="/usr/local/opt/libxml2/lib/pkgconfig"
