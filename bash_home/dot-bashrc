#!/bin/bash
PHILRC_BASHRC=".bashrc_sourced_at_$(date "+%Y-%m-%d_%H%M")"
# This is for tramp.
# Tramp needs the prompt to look a certain way because it uses a regex to find
# it. Since it sets TERM=dumb, if that variable is true, then set the prompt to
# '$ ' (and unset some options) and we're all set.
if [[ $TERM == "dumb" ]] ; then
   # echo "TERM = $TERM" >&2
   unset PROMPT_COMMAND
   PS1='$ '
   return
fi

# echo ".bashrc START" >&2
################################################################################
# Checks for interactive shell.  The following will only be done if the shell is
# an interactive session.  Otherwise these things should not be done.
################################################################################
function main(){
    if [[ "$-" == *i* ]] ; then

        # source $HOME/.philconfig/FILES/envvars
        source $PHILCONFIG/FILES/functions
        # source $PHILCONFIG/FILES/general-aliases
        # source $PHILCONFIG/FILES/github-aliases
        # source $PHILCONFIG/Templates/.template-completion.bash
        # source $PHILCONFIG/FILES/git-completion.bash
        # source $PHILCONFIG/FILES/git-prompt.sh
        source $PHILCONFIG/FILES/git-prompt-phil.sh
        # source $PHILCONFIG/CMC/aliases.sh
        alias ls='ls --color'
        alias cmdoc='cmake -DCMAKE_DOC_USE_OLD_USAGE_LOG=ON -DSPOOKI_QUICK_DEV_MODE=OFF'
        alias cmqdoc='cmake -DCMAKE_DOC_USE_OLD_USAGE_LOG=ON -DSPOOKI_QUICK_DEV_MODE=ON'
        alias dusage='du --max-depth=1 -h | sort -h'

        bashrc_set_vim_keybindigs
        # bashrc_configure_prompt
        bashrc_configure_history

        export PATH=$HOME/.local/bin:$PATH

        # if    at_cmc ; then bashrc_cmc_specifics
        # elif at_poly ; then bashrc_poly_specifics
        # elif [[ $(uname) == Darwin ]] ; then bashrc_osx_specifics
        # fi
        if [ $(hostname) = sequoia ] ; then
            bashrc_exec_fish_unless_normal
        fi

        if [ -f ~/.profile ] ; then source ~/.profile ; fi
        source ~/profile_git_prompt_phil.sh

    fi
}


p.ordenv(){
    . /ssm/net/env/3.1/etc/ssm.d/profile
    export ORDENV_COMM=ec/20141112
    . ordenv-load
    . ssmuse-sh -d /ssm/net/cmds/apps/vscode/1.38
}

_p.restore_source_autocomplete(){
    complete -o default . source
}

p.lcnordenv(){
    ### environment setup Ubuntu-12
    . /ssm/net/env/ssmuse-boot.sh
    . ssmuse-sh -x env/20160502
    export ORDENV_SITE_PROFILE=20160711
    export ORDENV_COMM_PROFILE=ec/20160711
    export ORDENV_GROUP_PROFILE=eccc/cmc/1.1
    echo === Loading r.load.dot === >&2
    . ssmuse-sh -x rpn/rload/3.5
    . ordenv-load
    ### environment setup - env
    . ssmuse-sh -d /ssm/net/hpcs/base/20170403
    . ssmuse-sh -p
    /data/aqli06/afsudev/ssm_domain/apps/xxdiff_4.0.1_ubuntu-14.04-amd64-64
    . ssmuse-sh -d hpcs/ext/thinlinc-4.7.0
    _p.restore_source_autocomplete
}

p.lcnprofile(){
    ln -s ~afsylcn/.profile ~/.profile
    ln -s ~afsylcn/.profile.d ~/.profile.d
}

p.noprofile(){
    rm -f ~/.profile
    rm -f ~/.profile.d
}

source $HOME/.philconfig/FILES/initutils
PHILCONFIG=$HOME/.philconfig

# Source global definitions
# if [ -f /etc/bashrc ]; then
#     . /etc/bashrc
# fi
p.g2co(){
cat << 'EOF' | ssh -tt ppp4
   export ORDENV_SITE_PROFILE=20190814
   export ORDENV_COMM_PROFILE=eccc/20191002
   export ORDENV_GROUP_PROFILE=eccc/cmc/1.8
   . /fs/ssm/main/env/ordenv-boot-20200204.sh
   /home/phc001/.local/bin/g2cm
EOF
}


################################################################################
# Different way of making PS1.  We rewrite PS1 right before it is to be
# displayed.  This is way more simple since we don't have to deal with all the
# weird ways that escaping characters can make our life difficult.
################################################################################
make_ps1(){
    previous_exit_code=$?
    if [[ $previous_exit_code == 0 ]] ; then
        pec="\[$green\] 0 \[$reset_colors\]"
    else
        pec="\[$(tput setaf 1)\] $previous_exit_code \[$reset_colors\]"
    fi

    prompt_start="\[$prompt_color\][$(whoami)@$(hostname) $(git_pwd)\[$reset_colors\]"

    git_part="$(git_ps1_phil)"
    if ! [ -z "$git_part" ] ; then
        git_part=" $git_part\[$reset_colors\]"
    fi

    last_part="\[$prompt_color\]] \$\[$reset_colors\] "

    PS1="$pec$prompt_start$git_part$last_part"
}

################################################################################
# 
################################################################################
bashrc_configure_prompt(){
    export PROMPT_COMMAND=make_ps1
    # Define colors for making prompt string.
    orange=$(tput setaf 208)
    green=$(tput setaf 2)
    yellow=$(at_cmc && tput setaf 11 || tput setaf 3)
    purple=$(tput setaf 5)
    blue=$(tput setaf 4)
    red=$(tput setaf 9)
    reset_colors=$(tput sgr 0)

    # define variables for prompt colors
    prompt_color=$purple

    GIT_PS1_PHIL_HEADLESS_COLOR=$red
    GIT_PS1_PHIL_DIRTY_COLOR=$orange
    GIT_PS1_PHIL_CLEAN_COLOR=$green

    PS2='\[$purple\] > \[$reset_colors\]'
}

################################################################################
# 
################################################################################
bashrc_configure_history(){

    # Make history infinite.
    export HISTFILESIZE=
    export HISTSIZE=
}

################################################################################
# 
################################################################################
bashrc_cmc_specifics(){
    # This file must be sourced by bash before zsh is launched
    cmc_check_git
    source ~/.profile
    complete -o default . source

    # if [[ $(cmc_network) == "ec" ]] ; then
    #     check_quota
    # fi

    # bashrc_exec_fish_unless_normal

    # What follows this will not happen unless we are in normal mode
    source $PHILCONFIG/CMC/aliases.sh
    # source ~/.profile.d/jp-aliases.sh
    # source ~/.profile.d/jp-functions.sh
}

################################################################################
# 
################################################################################
bashrc_set_vim_keybindigs(){
    # Make bash behave a bit like vim.
    if ! [ -e ~/.normal_mode ] ; then
        set -o vi
    fi
}

################################################################################
# 
################################################################################
bashrc_poly_specifics(){
    # bashrc_exec_fish_unless_normal
    true
}

bashrc_osx_specifics(){
    # bashrc_exec_fish_unless_normal
    true
}

bashrc_exec_fish_unless_normal(){
    if ! [ -e ~/.normal_mode ] && ! [ -e ~/.normal_mode.d/normal_mode ] && [ $(hostname) = sequoia ] ; then
        fish
    fi
}

p.use_vscode(){
    _p.require_ordenv
    . ssmuse-sh -d /ssm/net/cmds/apps/vscode/1.38
}
_p.require_ordenv(){
    if [ -z "${ORDENV_SETUP}" ] ; then
       export ORDENV_SITE_PROFILE=20190814
       export ORDENV_COMM_PROFILE=eccc/20191002
       export ORDENV_GROUP_PROFILE=eccc/cmc/1.8
       . /fs/ssm/main/env/ordenv-boot-20190814.sh
    fi
}

function fuckface(){
    true
}

main

BASHRC_LOADED=true
# echo ".bashrc END" >&2
