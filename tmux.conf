# Sane scrolling
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Scrolling with mouse wheel in terminals (but also in vim which doesn't work)
# set -g mode-mouse on

# vi cursor movement.  What I want is hjkl to move between and resize windows.
# This is not it.
# set-window-option -g mode-keys vi

set -g prefix C-a


set -s escape-time 1


set -g base-index 1

bind r source-file ~/.tmux.conf \; display "Sourced configuration"


#COLOR
set -g default-terminal "screen-256color"
set -g pane-border-bg yellow
set -g pane-active-border-bg white
# TODO: create OS-specific files and use one conditional command to source the
# OS specific stuff.
# if-shell "uname | grep -q Darwin" "source-file .tmux-macosx" "source-file .tmux-linux"

# MOUSE STUFF
# incompatible with the version of tmux that I have on my imac.
# TODO: Do this kind of thing the right way.  there's no way using if-shell in
# tmux to get tmux version is the right way of getting the version.  Like tmux
# doesn't know its own version!  I have to spawn a shell.
if-shell '[[ "$(tmux -V)" != "tmux 2.3" ]]' "setw -g mode-mouse off"
if-shell '[[ "$(tmux -V)" != "tmux 2.3" ]]' "set -g mouse-resize-pane off"
if-shell '[[ "$(tmux -V)" != "tmux 2.3" ]]' "set -g mouse-select-pane off"
if-shell '[[ "$(tmux -V)" != "tmux 2.3" ]]' "set -g mouse-select-window off"

bind k selectp -U # switch to panel Up
bind j selectp -D # switch to panel Down 
bind h selectp -L # switch to panel Left
bind l selectp -R # switch to panel Right

# resize panes like vim
bind -r C-h resize-pane -L 4 
bind -r C-l resize-pane -R 4 
bind -r C-j resize-pane -D 4 
bind -r C-k resize-pane -U 4 

# https://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/#fnref:1
# What a great idea, I just accepted the fact that using tmux would deprive me
# of my C-a to the start of the line but this guy, he did this ... wow!
bind C-a send-keys C-a

# if-shell "[[ '$(tmux -V)' == *2.1]]" "set-option default-path \"$PWD\""
if-shell "[[ $(tmux -V) == *1.8 ]]" "bind c   new-window     " "bind c   new-window      -c '#{pane_current_path}'"
if-shell "[[ $(tmux -V) == *1.8 ]]" "bind /   split-window -h" "bind /   split-window -h -c '#{pane_current_path}'"
if-shell "[[ $(tmux -V) == *1.8 ]]" "bind '-' split-window -v" "bind '-' split-window -v -c '#{pane_current_path}'"

# Uncomment this line to test or debug ifs in tmux.  Putting this in
# the tmux.conf will make it complain at startup because of the call to display,
# but once in Tmux, doing 'C-a r' will display true or false correctly.
# if-shell '[[ "$(tmux -V)" == "tmux 2.3" ]]' "display true" "display false"
set -g status-right '#(whoami)@#(hostname)  #(TZ="America/Toronto" date "+%%Y-%%m-%%d %%H:%%M")'